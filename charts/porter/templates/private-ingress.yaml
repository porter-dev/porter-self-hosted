{{- if .Values.privateIngress.enabled -}}
{{- $fullName := include "porter.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1/Ingress" -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-private
  labels:
    {{- include "porter.labels" . | nindent 4 }}
  {{- with .Values.privateIngress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.privateIngress.privateIngressClass }}
  {{- if .Values.privateIngress.tls }}
  tls:
    {{- range .Values.privateIngress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.privateIngress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
        - path: {{ . }}
          {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          pathType: ImplementationSpecific
          {{- end }}
          backend:
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}                
            service:
              name: {{ $fullName }}
              port:
                number: {{ $svcPort }}
            {{- else }}
            serviceName: {{ $fullName }}
            servicePort: {{ $svcPort }}
            {{- end }}
          {{- end }}
        {{- end }}
    {{- end }}
